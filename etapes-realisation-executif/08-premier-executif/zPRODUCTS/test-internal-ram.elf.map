
Allocating common symbols
Common symbol       size              file

gRunningTaskContextSaveAddress
                    0x4               zBUILDS/scheduler-no-priority.c.o

Memory Configuration

Name             Origin             Length             Attributes
internal_ram     0x40000000         0x00004000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD zBUILDS/crt0-pour-executif.s.o
LOAD zBUILDS/handler-stub-for-DAbort.s.o
LOAD zBUILDS/handler-stub-for-FIRQ.s.o
LOAD zBUILDS/handler-stub-for-PAbort.s.o
LOAD zBUILDS/handler-stub-for-undef.s.o
LOAD zBUILDS/initialize-lpc2200-pll.c.o
LOAD zBUILDS/sorties_s0_s3.c.o
LOAD zBUILDS/afficheur_lcd.c.o
LOAD zBUILDS/arm-context.s.o
LOAD zBUILDS/task-descriptor.c.o
LOAD zBUILDS/scheduler-no-priority.c.o
LOAD zBUILDS/task-list.c.o
LOAD zBUILDS/services.s.o
LOAD zBUILDS/application.c.o
LOAD /usr/local/dev-arm/i386-Darwin-arm-gcc-4.6.1/arm-elf/lib/libc.a
LOAD /usr/local/dev-arm/i386-Darwin-arm-gcc-4.6.1/lib/gcc/arm-elf/4.6.1/libgcc.a
                0x00000100                FIQ_STACK_SIZE = 0x100
                0x00000100                IRQ_STACK_SIZE = 0x100
                0x00000100                ABT_STACK_SIZE = 0x100
                0x00000100                UND_STACK_SIZE = 0x100
                0x00000100                USR_STACK_SIZE = 0x100
                0x00000400                SVC_STACK_SIZE = 0x400

.text           0x40000000      0xcc4
 *(.vectors)
 .vectors       0x40000000       0x40 zBUILDS/crt0-pour-executif.s.o
                0x40000040                . = ALIGN (0x4)
 *(.init)
 .init          0x40000040       0xb4 zBUILDS/crt0-pour-executif.s.o
                0x40000040                ResetHandler
                0x400000f4                . = ALIGN (0x4)
 *(.text)
 .text          0x400000f4        0x0 zBUILDS/crt0-pour-executif.s.o
 .text          0x400000f4        0x4 zBUILDS/handler-stub-for-DAbort.s.o
                0x400000f4                DAbortHandler
 .text          0x400000f8        0x4 zBUILDS/handler-stub-for-FIRQ.s.o
                0x400000f8                FIQHandler
 .text          0x400000fc        0x4 zBUILDS/handler-stub-for-PAbort.s.o
                0x400000fc                PAbortHandler
 .text          0x40000100        0x4 zBUILDS/handler-stub-for-undef.s.o
                0x40000100                UndefHandler
 .text          0x40000104       0x78 zBUILDS/initialize-lpc2200-pll.c.o
                0x40000104                initialize_lpc2200_pll
 .text          0x4000017c       0x80 zBUILDS/sorties_s0_s3.c.o
                0x4000017c                initialiser_sorties_s0_s3
                0x4000019c                allumer_sorties_s0_s3
                0x400001cc                eteindre_sorties_s0_s3
 .text          0x400001fc      0x42c zBUILDS/afficheur_lcd.c.o
                0x400001fc                lcd_goto_line_column
                0x40000240                lcd_backlight
                0x40000268                lcd_print_char
                0x4000028c                lcd_print_string
                0x400002c0                lcd_init
                0x40000300                lcd_print_hex1
                0x40000350                lcd_print_unsigned
                0x400003cc                lcd_print_unsigned_with_leading_spaces
                0x40000438                lcd_print_signed
                0x40000468                lcd_print_signed_with_leading_spaces
                0x400004e0                lcd_print_hex2
                0x400004fc                lcd_print_hex4
                0x4000051c                lcd_print_hex8
                0x4000053c                lcd_print_spaces
                0x4000056c                programmer_uart1
                0x400005c4                recevoir_caractere_serie1
                0x400005e4                attente_caractere_serie1
                0x40000604                envoyer_caractere_serie1
 .text          0x40000628      0x16c zBUILDS/arm-context.s.o
                0x40000628                SWIHandler
                0x400006c8                IRQHandler
                0x4000075c                __entry_point
 .text          0x40000794      0x158 zBUILDS/task-descriptor.c.o
                0x400007b4                swi_create_task
                0x40000820                swi_task_self_terminate
                0x40000838                swi_start_task
                0x4000088c                swi_close_task
                0x400008dc                current_task_count
 .text          0x400008ec       0x8c zBUILDS/scheduler-no-priority.c.o
                0x400008ec                kernel_runningTask
                0x400008fc                kernel_makeTaskReady
                0x40000918                kernel_makeNoTaskRunning
                0x40000938                kernel_selectTaskToRun
 .text          0x40000978      0x178 zBUILDS/task-list.c.o
                0x40000978                initTaskList
                0x40000988                insertTaskAtTail
                0x400009c0                insertTaskFollowingPriority
                0x40000a54                taskAtHead
                0x40000a5c                removeTaskAtHead
                0x40000aa4                removeFromCurrentTaskList
 .text          0x40000af0       0x18 zBUILDS/services.s.o
                0x40000af0                __swi_dispatcher_table
                0x40000af8                usr_create_task
                0x40000b00                usr_task_self_terminate
 .text          0x40000b08       0xc8 zBUILDS/application.c.o
                0x40000b8c                initialiser_application
                0x40000bd0                . = ALIGN (0x4)
 *(.rodata)
                0x40000bd0                . = ALIGN (0x4)
 *(.rodata*)
                0x40000bd0                . = ALIGN (0x4)
 *(.glue_7t)
 .glue_7t       0x00000000        0x0 linker stubs
                0x40000bd0                . = ALIGN (0x4)
 *(.glue_7)
 .glue_7        0x00000000        0x0 linker stubs
                0x40000bd0                . = ALIGN (0x4)
 *(.comment)
 .comment       0x40000bd0       0x11 zBUILDS/initialize-lpc2200-pll.c.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 zBUILDS/sorties_s0_s3.c.o
 .comment       0x00000000       0x12 zBUILDS/afficheur_lcd.c.o
 .comment       0x00000000       0x12 zBUILDS/task-descriptor.c.o
 .comment       0x00000000       0x12 zBUILDS/scheduler-no-priority.c.o
 .comment       0x00000000       0x12 zBUILDS/task-list.c.o
 .comment       0x00000000       0x12 zBUILDS/application.c.o
                0x40000be4                . = ALIGN (0x4)
 *fill*         0x40000be1        0x3 00
 *(.ARM.*)
 .ARM.attributes
                0x40000be4       0x10 zBUILDS/crt0-pour-executif.s.o
 .ARM.attributes
                0x40000bf4       0x10 zBUILDS/handler-stub-for-DAbort.s.o
 .ARM.attributes
                0x40000c04       0x10 zBUILDS/handler-stub-for-FIRQ.s.o
 .ARM.attributes
                0x40000c14       0x10 zBUILDS/handler-stub-for-PAbort.s.o
 .ARM.attributes
                0x40000c24       0x10 zBUILDS/handler-stub-for-undef.s.o
 .ARM.attributes
                0x40000c34       0x10 zBUILDS/initialize-lpc2200-pll.c.o
 .ARM.attributes
                0x40000c44       0x10 zBUILDS/sorties_s0_s3.c.o
 .ARM.attributes
                0x40000c54       0x10 zBUILDS/afficheur_lcd.c.o
 .ARM.attributes
                0x40000c64       0x10 zBUILDS/arm-context.s.o
 .ARM.attributes
                0x40000c74       0x10 zBUILDS/task-descriptor.c.o
 .ARM.attributes
                0x40000c84       0x10 zBUILDS/scheduler-no-priority.c.o
 .ARM.attributes
                0x40000c94       0x10 zBUILDS/task-list.c.o
 .ARM.attributes
                0x40000ca4       0x10 zBUILDS/services.s.o
 .ARM.attributes
                0x40000cb4       0x10 zBUILDS/application.c.o
                0x40000cc4                . = ALIGN (0x4)
                0x40000cc4                etext = .

.vfp11_veneer   0x40000cc4        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x40000cc4        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.data           0x40000cc4        0x0
                0x40000cc4                PROVIDE (__data_start, .)
 *(.data)
 .data          0x40000cc4        0x0 zBUILDS/crt0-pour-executif.s.o
 .data          0x40000cc4        0x0 zBUILDS/handler-stub-for-DAbort.s.o
 .data          0x40000cc4        0x0 zBUILDS/handler-stub-for-FIRQ.s.o
 .data          0x40000cc4        0x0 zBUILDS/handler-stub-for-PAbort.s.o
 .data          0x40000cc4        0x0 zBUILDS/handler-stub-for-undef.s.o
 .data          0x40000cc4        0x0 zBUILDS/initialize-lpc2200-pll.c.o
 .data          0x40000cc4        0x0 zBUILDS/sorties_s0_s3.c.o
 .data          0x40000cc4        0x0 zBUILDS/afficheur_lcd.c.o
 .data          0x40000cc4        0x0 zBUILDS/arm-context.s.o
 .data          0x40000cc4        0x0 zBUILDS/task-descriptor.c.o
 .data          0x40000cc4        0x0 zBUILDS/scheduler-no-priority.c.o
 .data          0x40000cc4        0x0 zBUILDS/task-list.c.o
 .data          0x40000cc4        0x0 zBUILDS/services.s.o
 .data          0x40000cc4        0x0 zBUILDS/application.c.o
                0x40000cc4                . = ALIGN (0x4)
                0x40000cc4                edata = .
                0x40000cc4                _edata = .
                0x40000cc4                PROVIDE (__data_end, .)

.bss            0x40000cc4      0xb3c
                0x40000cc4                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x40000cc4        0x0 zBUILDS/crt0-pour-executif.s.o
 .bss           0x40000cc4        0x0 zBUILDS/handler-stub-for-DAbort.s.o
 .bss           0x40000cc4        0x0 zBUILDS/handler-stub-for-FIRQ.s.o
 .bss           0x40000cc4        0x0 zBUILDS/handler-stub-for-PAbort.s.o
 .bss           0x40000cc4        0x0 zBUILDS/handler-stub-for-undef.s.o
 .bss           0x40000cc4        0x0 zBUILDS/initialize-lpc2200-pll.c.o
 .bss           0x40000cc4        0x0 zBUILDS/sorties_s0_s3.c.o
 .bss           0x40000cc4        0x0 zBUILDS/afficheur_lcd.c.o
 .bss           0x40000cc4        0x0 zBUILDS/arm-context.s.o
 .bss           0x40000cc4        0xc zBUILDS/task-descriptor.c.o
 .bss           0x40000cd0        0xc zBUILDS/scheduler-no-priority.c.o
 .bss           0x40000cdc        0x0 zBUILDS/task-list.c.o
 .bss           0x40000cdc        0x0 zBUILDS/services.s.o
 .bss           0x40000cdc      0x178 zBUILDS/application.c.o
 *(COMMON)
 COMMON         0x40000e54        0x4 zBUILDS/scheduler-no-priority.c.o
                0x40000e54                gRunningTaskContextSaveAddress
                0x40000e58                . = ALIGN (0x4)
                0x40000e58                PROVIDE (__bss_end, .)
                0x40000f00                . = ALIGN (0x100)
 *fill*         0x40000e58       0xa8 00
                0x40000f00                PROVIDE (__stack_start, .)
                0x40000f00                PROVIDE (__stack_fiq_start, .)
                0x40001000                . = (. + FIQ_STACK_SIZE)
 *fill*         0x40000f00      0x100 00
                0x40001000                . = ALIGN (0x4)
                0x40001000                PROVIDE (__stack_fiq_end, .)
                0x40001000                PROVIDE (__stack_irq_start, .)
                0x40001100                . = (. + IRQ_STACK_SIZE)
 *fill*         0x40001000      0x100 00
                0x40001100                . = ALIGN (0x4)
                0x40001100                PROVIDE (__stack_irq_end, .)
                0x40001100                PROVIDE (__stack_abt_start, .)
                0x40001200                . = (. + ABT_STACK_SIZE)
 *fill*         0x40001100      0x100 00
                0x40001200                . = ALIGN (0x4)
                0x40001200                PROVIDE (__stack_abt_end, .)
                0x40001200                PROVIDE (__stack_und_start, .)
                0x40001300                . = (. + UND_STACK_SIZE)
 *fill*         0x40001200      0x100 00
                0x40001300                . = ALIGN (0x4)
                0x40001300                PROVIDE (__stack_und_end, .)
                0x40001300                PROVIDE (__stack_svc_start, .)
                0x40001700                . = (. + SVC_STACK_SIZE)
 *fill*         0x40001300      0x400 00
                0x40001700                . = ALIGN (0x4)
                0x40001700                PROVIDE (__stack_svc_end, .)
                0x40001700                PROVIDE (__stack_usr_start, .)
                0x40001800                . = (. + USR_STACK_SIZE)
 *fill*         0x40001700      0x100 00
                0x40001800                . = ALIGN (0x4)
                0x40001800                PROVIDE (__stack_usr_end, .)
                0x40001800                PROVIDE (__stack_end, .)
                0x40001800                PROVIDE (__heap_start, .)
OUTPUT(zPRODUCTS/test-internal-ram.elf elf32-littlearm)

Cross Reference Table

Symbol                                            File
DAbortHandler                                     zBUILDS/handler-stub-for-DAbort.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
FIQHandler                                        zBUILDS/handler-stub-for-FIRQ.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
IRQHandler                                        zBUILDS/arm-context.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
PAbortHandler                                     zBUILDS/handler-stub-for-PAbort.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
ResetHandler                                      zBUILDS/crt0-pour-executif.s.o
SWIHandler                                        zBUILDS/arm-context.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
UndefHandler                                      zBUILDS/handler-stub-for-undef.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
__bss_end                                         zBUILDS/crt0-pour-executif.s.o
__bss_start                                       zBUILDS/crt0-pour-executif.s.o
__entry_point                                     zBUILDS/arm-context.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
__stack_abt_end                                   zBUILDS/crt0-pour-executif.s.o
__stack_fiq_end                                   zBUILDS/crt0-pour-executif.s.o
__stack_irq_end                                   zBUILDS/crt0-pour-executif.s.o
__stack_svc_end                                   zBUILDS/crt0-pour-executif.s.o
__stack_und_end                                   zBUILDS/crt0-pour-executif.s.o
__swi_dispatcher_table                            zBUILDS/services.s.o
                                                  zBUILDS/arm-context.s.o
allumer_sorties_s0_s3                             zBUILDS/sorties_s0_s3.c.o
                                                  zBUILDS/application.c.o
attente_caractere_serie1                          zBUILDS/afficheur_lcd.c.o
current_task_count                                zBUILDS/task-descriptor.c.o
envoyer_caractere_serie1                          zBUILDS/afficheur_lcd.c.o
eteindre_sorties_s0_s3                            zBUILDS/sorties_s0_s3.c.o
                                                  zBUILDS/application.c.o
gRunningTaskContextSaveAddress                    zBUILDS/scheduler-no-priority.c.o
                                                  zBUILDS/arm-context.s.o
initTaskList                                      zBUILDS/task-list.c.o
initialiser_application                           zBUILDS/application.c.o
                                                  zBUILDS/crt0-pour-executif.s.o
initialiser_sorties_s0_s3                         zBUILDS/sorties_s0_s3.c.o
                                                  zBUILDS/application.c.o
initialize_lpc2200_pll                            zBUILDS/initialize-lpc2200-pll.c.o
                                                  zBUILDS/crt0-pour-executif.s.o
insertTaskAtTail                                  zBUILDS/task-list.c.o
                                                  zBUILDS/scheduler-no-priority.c.o
insertTaskFollowingPriority                       zBUILDS/task-list.c.o
kernel_makeNoTaskRunning                          zBUILDS/scheduler-no-priority.c.o
                                                  zBUILDS/task-descriptor.c.o
kernel_makeTaskReady                              zBUILDS/scheduler-no-priority.c.o
                                                  zBUILDS/task-descriptor.c.o
kernel_runningTask                                zBUILDS/scheduler-no-priority.c.o
                                                  zBUILDS/task-descriptor.c.o
kernel_selectTaskToRun                            zBUILDS/scheduler-no-priority.c.o
                                                  zBUILDS/arm-context.s.o
lcd_backlight                                     zBUILDS/afficheur_lcd.c.o
lcd_goto_line_column                              zBUILDS/afficheur_lcd.c.o
lcd_init                                          zBUILDS/afficheur_lcd.c.o
lcd_print_char                                    zBUILDS/afficheur_lcd.c.o
lcd_print_hex1                                    zBUILDS/afficheur_lcd.c.o
lcd_print_hex2                                    zBUILDS/afficheur_lcd.c.o
lcd_print_hex4                                    zBUILDS/afficheur_lcd.c.o
lcd_print_hex8                                    zBUILDS/afficheur_lcd.c.o
lcd_print_signed                                  zBUILDS/afficheur_lcd.c.o
lcd_print_signed_with_leading_spaces              zBUILDS/afficheur_lcd.c.o
lcd_print_spaces                                  zBUILDS/afficheur_lcd.c.o
lcd_print_string                                  zBUILDS/afficheur_lcd.c.o
lcd_print_unsigned                                zBUILDS/afficheur_lcd.c.o
lcd_print_unsigned_with_leading_spaces            zBUILDS/afficheur_lcd.c.o
programmer_uart1                                  zBUILDS/afficheur_lcd.c.o
                                                  zBUILDS/application.c.o
recevoir_caractere_serie1                         zBUILDS/afficheur_lcd.c.o
removeFromCurrentTaskList                         zBUILDS/task-list.c.o
removeTaskAtHead                                  zBUILDS/task-list.c.o
                                                  zBUILDS/scheduler-no-priority.c.o
swi_close_task                                    zBUILDS/task-descriptor.c.o
swi_create_task                                   zBUILDS/task-descriptor.c.o
                                                  zBUILDS/application.c.o
                                                  zBUILDS/services.s.o
swi_start_task                                    zBUILDS/task-descriptor.c.o
                                                  zBUILDS/application.c.o
swi_task_self_terminate                           zBUILDS/task-descriptor.c.o
                                                  zBUILDS/services.s.o
taskAtHead                                        zBUILDS/task-list.c.o
usr_create_task                                   zBUILDS/services.s.o
usr_task_self_terminate                           zBUILDS/services.s.o
                                                  zBUILDS/task-descriptor.c.o
