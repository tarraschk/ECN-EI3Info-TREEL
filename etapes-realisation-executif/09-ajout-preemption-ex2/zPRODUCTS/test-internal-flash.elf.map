
Allocating common symbols
Common symbol       size              file

gRunningTaskContextSaveAddress
                    0x4               zBUILDS/scheduler-many-priorities.c.o

Memory Configuration

Name             Origin             Length             Attributes
internal_flash   0x00000000         0x0003e000
internal_ram     0x40000000         0x00004000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD zBUILDS/crt0-pour-executif.s.o
LOAD zBUILDS/handler-stub-for-DAbort.s.o
LOAD zBUILDS/handler-stub-for-FIRQ.s.o
LOAD zBUILDS/handler-stub-for-PAbort.s.o
LOAD zBUILDS/handler-stub-for-undef.s.o
LOAD zBUILDS/initialize-lpc2200-pll.c.o
LOAD zBUILDS/sorties_s0_s3.c.o
LOAD zBUILDS/afficheur_lcd.c.o
LOAD zBUILDS/arm-context.s.o
LOAD zBUILDS/task-descriptor.c.o
LOAD zBUILDS/scheduler-many-priorities.c.o
LOAD zBUILDS/task-list.c.o
LOAD zBUILDS/services.s.o
LOAD zBUILDS/application.c.o
LOAD /usr/local/dev-arm/i386-Darwin-arm-gcc-4.6.1/arm-elf/lib/libc.a
LOAD /usr/local/dev-arm/i386-Darwin-arm-gcc-4.6.1/lib/gcc/arm-elf/4.6.1/libgcc.a
                0x00000100                FIQ_STACK_SIZE = 0x100
                0x00000100                IRQ_STACK_SIZE = 0x100
                0x00000100                ABT_STACK_SIZE = 0x100
                0x00000100                UND_STACK_SIZE = 0x100
                0x00000100                USR_STACK_SIZE = 0x100
                0x00000400                SVC_STACK_SIZE = 0x400

.text           0x00000000      0xdcc
 *(.vectors)
 .vectors       0x00000000       0x40 zBUILDS/crt0-pour-executif.s.o
                0x00000040                . = ALIGN (0x4)
 *(.init)
 .init          0x00000040       0xb4 zBUILDS/crt0-pour-executif.s.o
                0x00000040                ResetHandler
                0x000000f4                . = ALIGN (0x4)
 *(.text)
 .text          0x000000f4        0x0 zBUILDS/crt0-pour-executif.s.o
 .text          0x000000f4        0x4 zBUILDS/handler-stub-for-DAbort.s.o
                0x000000f4                DAbortHandler
 .text          0x000000f8        0x4 zBUILDS/handler-stub-for-FIRQ.s.o
                0x000000f8                FIQHandler
 .text          0x000000fc        0x4 zBUILDS/handler-stub-for-PAbort.s.o
                0x000000fc                PAbortHandler
 .text          0x00000100        0x4 zBUILDS/handler-stub-for-undef.s.o
                0x00000100                UndefHandler
 .text          0x00000104       0x78 zBUILDS/initialize-lpc2200-pll.c.o
                0x00000104                initialize_lpc2200_pll
 .text          0x0000017c       0x80 zBUILDS/sorties_s0_s3.c.o
                0x0000017c                initialiser_sorties_s0_s3
                0x0000019c                allumer_sorties_s0_s3
                0x000001cc                eteindre_sorties_s0_s3
 .text          0x000001fc      0x42c zBUILDS/afficheur_lcd.c.o
                0x000001fc                lcd_goto_line_column
                0x00000240                lcd_backlight
                0x00000268                lcd_print_char
                0x0000028c                lcd_print_string
                0x000002c0                lcd_init
                0x00000300                lcd_print_hex1
                0x00000350                lcd_print_unsigned
                0x000003cc                lcd_print_unsigned_with_leading_spaces
                0x00000438                lcd_print_signed
                0x00000468                lcd_print_signed_with_leading_spaces
                0x000004e0                lcd_print_hex2
                0x000004fc                lcd_print_hex4
                0x0000051c                lcd_print_hex8
                0x0000053c                lcd_print_spaces
                0x0000056c                programmer_uart1
                0x000005c4                recevoir_caractere_serie1
                0x000005e4                attente_caractere_serie1
                0x00000604                envoyer_caractere_serie1
 .text          0x00000628      0x16c zBUILDS/arm-context.s.o
                0x00000628                SWIHandler
                0x000006c8                IRQHandler
                0x0000075c                __entry_point
 .text          0x00000794      0x174 zBUILDS/task-descriptor.c.o
                0x000007b4                swi_create_task
                0x00000820                swi_task_self_terminate
                0x00000838                swi_start_task
                0x0000088c                swi_close_task
                0x000008dc                current_task_count
                0x000008ec                swi_preempt
 .text          0x00000908       0xd0 zBUILDS/scheduler-many-priorities.c.o
                0x00000908                kernel_runningTask
                0x00000918                kernel_makeTaskReady
                0x00000934                kernel_makeNoTaskRunning
                0x00000954                kernel_selectTaskToRun
 .text          0x000009d8      0x178 zBUILDS/task-list.c.o
                0x000009d8                initTaskList
                0x000009e8                insertTaskAtTail
                0x00000a20                insertTaskFollowingPriority
                0x00000ab4                taskAtHead
                0x00000abc                removeTaskAtHead
                0x00000b04                removeFromCurrentTaskList
 .text          0x00000b50       0x24 zBUILDS/services.s.o
                0x00000b50                __swi_dispatcher_table
                0x00000b5c                usr_create_task
                0x00000b64                usr_task_self_terminate
                0x00000b6c                usr_preempt
 .text          0x00000b74      0x164 zBUILDS/application.c.o
                0x00000bf8                initialiser_application
                0x00000cd8                . = ALIGN (0x4)
 *(.rodata)
                0x00000cd8                . = ALIGN (0x4)
 *(.rodata*)
                0x00000cd8                . = ALIGN (0x4)
 *(.glue_7t)
 .glue_7t       0x00000000        0x0 linker stubs
                0x00000cd8                . = ALIGN (0x4)
 *(.glue_7)
 .glue_7        0x00000000        0x0 linker stubs
                0x00000cd8                . = ALIGN (0x4)
 *(.comment)
 .comment       0x00000cd8       0x11 zBUILDS/initialize-lpc2200-pll.c.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 zBUILDS/sorties_s0_s3.c.o
 .comment       0x00000000       0x12 zBUILDS/afficheur_lcd.c.o
 .comment       0x00000000       0x12 zBUILDS/task-descriptor.c.o
 .comment       0x00000000       0x12 zBUILDS/scheduler-many-priorities.c.o
 .comment       0x00000000       0x12 zBUILDS/task-list.c.o
 .comment       0x00000000       0x12 zBUILDS/application.c.o
                0x00000cec                . = ALIGN (0x4)
 *fill*         0x00000ce9        0x3 00
 *(.ARM.*)
 .ARM.attributes
                0x00000cec       0x10 zBUILDS/crt0-pour-executif.s.o
 .ARM.attributes
                0x00000cfc       0x10 zBUILDS/handler-stub-for-DAbort.s.o
 .ARM.attributes
                0x00000d0c       0x10 zBUILDS/handler-stub-for-FIRQ.s.o
 .ARM.attributes
                0x00000d1c       0x10 zBUILDS/handler-stub-for-PAbort.s.o
 .ARM.attributes
                0x00000d2c       0x10 zBUILDS/handler-stub-for-undef.s.o
 .ARM.attributes
                0x00000d3c       0x10 zBUILDS/initialize-lpc2200-pll.c.o
 .ARM.attributes
                0x00000d4c       0x10 zBUILDS/sorties_s0_s3.c.o
 .ARM.attributes
                0x00000d5c       0x10 zBUILDS/afficheur_lcd.c.o
 .ARM.attributes
                0x00000d6c       0x10 zBUILDS/arm-context.s.o
 .ARM.attributes
                0x00000d7c       0x10 zBUILDS/task-descriptor.c.o
 .ARM.attributes
                0x00000d8c       0x10 zBUILDS/scheduler-many-priorities.c.o
 .ARM.attributes
                0x00000d9c       0x10 zBUILDS/task-list.c.o
 .ARM.attributes
                0x00000dac       0x10 zBUILDS/services.s.o
 .ARM.attributes
                0x00000dbc       0x10 zBUILDS/application.c.o
                0x00000dcc                . = ALIGN (0x4)
                0x00000dcc                etext = .

.vfp11_veneer   0x00000dcc        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x00000dcc        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.data           0x40000000        0x0
                0x40000000                PROVIDE (__data_start, .)
 *(.data)
 .data          0x40000000        0x0 zBUILDS/crt0-pour-executif.s.o
 .data          0x40000000        0x0 zBUILDS/handler-stub-for-DAbort.s.o
 .data          0x40000000        0x0 zBUILDS/handler-stub-for-FIRQ.s.o
 .data          0x40000000        0x0 zBUILDS/handler-stub-for-PAbort.s.o
 .data          0x40000000        0x0 zBUILDS/handler-stub-for-undef.s.o
 .data          0x40000000        0x0 zBUILDS/initialize-lpc2200-pll.c.o
 .data          0x40000000        0x0 zBUILDS/sorties_s0_s3.c.o
 .data          0x40000000        0x0 zBUILDS/afficheur_lcd.c.o
 .data          0x40000000        0x0 zBUILDS/arm-context.s.o
 .data          0x40000000        0x0 zBUILDS/task-descriptor.c.o
 .data          0x40000000        0x0 zBUILDS/scheduler-many-priorities.c.o
 .data          0x40000000        0x0 zBUILDS/task-list.c.o
 .data          0x40000000        0x0 zBUILDS/services.s.o
 .data          0x40000000        0x0 zBUILDS/application.c.o
                0x40000000                . = ALIGN (0x4)
                0x40000000                edata = .
                0x40000000                _edata = .
                0x40000000                PROVIDE (__data_end, .)

.bss            0x40000000      0xc00
                0x40000000                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x40000000        0x0 zBUILDS/crt0-pour-executif.s.o
 .bss           0x40000000        0x0 zBUILDS/handler-stub-for-DAbort.s.o
 .bss           0x40000000        0x0 zBUILDS/handler-stub-for-FIRQ.s.o
 .bss           0x40000000        0x0 zBUILDS/handler-stub-for-PAbort.s.o
 .bss           0x40000000        0x0 zBUILDS/handler-stub-for-undef.s.o
 .bss           0x40000000        0x0 zBUILDS/initialize-lpc2200-pll.c.o
 .bss           0x40000000        0x0 zBUILDS/sorties_s0_s3.c.o
 .bss           0x40000000        0x0 zBUILDS/afficheur_lcd.c.o
 .bss           0x40000000        0x0 zBUILDS/arm-context.s.o
 .bss           0x40000000        0xc zBUILDS/task-descriptor.c.o
 .bss           0x4000000c        0xc zBUILDS/scheduler-many-priorities.c.o
 .bss           0x40000018        0x0 zBUILDS/task-list.c.o
 .bss           0x40000018        0x0 zBUILDS/services.s.o
 .bss           0x40000018      0x2e0 zBUILDS/application.c.o
 *(COMMON)
 COMMON         0x400002f8        0x4 zBUILDS/scheduler-many-priorities.c.o
                0x400002f8                gRunningTaskContextSaveAddress
                0x400002fc                . = ALIGN (0x4)
                0x400002fc                PROVIDE (__bss_end, .)
                0x40000300                . = ALIGN (0x100)
 *fill*         0x400002fc        0x4 00
                0x40000300                PROVIDE (__stack_start, .)
                0x40000300                PROVIDE (__stack_fiq_start, .)
                0x40000400                . = (. + FIQ_STACK_SIZE)
 *fill*         0x40000300      0x100 00
                0x40000400                . = ALIGN (0x4)
                0x40000400                PROVIDE (__stack_fiq_end, .)
                0x40000400                PROVIDE (__stack_irq_start, .)
                0x40000500                . = (. + IRQ_STACK_SIZE)
 *fill*         0x40000400      0x100 00
                0x40000500                . = ALIGN (0x4)
                0x40000500                PROVIDE (__stack_irq_end, .)
                0x40000500                PROVIDE (__stack_abt_start, .)
                0x40000600                . = (. + ABT_STACK_SIZE)
 *fill*         0x40000500      0x100 00
                0x40000600                . = ALIGN (0x4)
                0x40000600                PROVIDE (__stack_abt_end, .)
                0x40000600                PROVIDE (__stack_und_start, .)
                0x40000700                . = (. + UND_STACK_SIZE)
 *fill*         0x40000600      0x100 00
                0x40000700                . = ALIGN (0x4)
                0x40000700                PROVIDE (__stack_und_end, .)
                0x40000700                PROVIDE (__stack_svc_start, .)
                0x40000b00                . = (. + SVC_STACK_SIZE)
 *fill*         0x40000700      0x400 00
                0x40000b00                . = ALIGN (0x4)
                0x40000b00                PROVIDE (__stack_svc_end, .)
                0x40000b00                PROVIDE (__stack_usr_start, .)
                0x40000c00                . = (. + USR_STACK_SIZE)
 *fill*         0x40000b00      0x100 00
                0x40000c00                . = ALIGN (0x4)
                0x40000c00                PROVIDE (__stack_usr_end, .)
                0x40000c00                PROVIDE (__stack_end, .)
                0x40000c00                PROVIDE (__heap_start, .)
OUTPUT(zPRODUCTS/test-internal-flash.elf elf32-littlearm)

Cross Reference Table

Symbol                                            File
DAbortHandler                                     zBUILDS/handler-stub-for-DAbort.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
FIQHandler                                        zBUILDS/handler-stub-for-FIRQ.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
IRQHandler                                        zBUILDS/arm-context.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
PAbortHandler                                     zBUILDS/handler-stub-for-PAbort.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
ResetHandler                                      zBUILDS/crt0-pour-executif.s.o
SWIHandler                                        zBUILDS/arm-context.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
UndefHandler                                      zBUILDS/handler-stub-for-undef.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
__bss_end                                         zBUILDS/crt0-pour-executif.s.o
__bss_start                                       zBUILDS/crt0-pour-executif.s.o
__entry_point                                     zBUILDS/arm-context.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
__stack_abt_end                                   zBUILDS/crt0-pour-executif.s.o
__stack_fiq_end                                   zBUILDS/crt0-pour-executif.s.o
__stack_irq_end                                   zBUILDS/crt0-pour-executif.s.o
__stack_svc_end                                   zBUILDS/crt0-pour-executif.s.o
__stack_und_end                                   zBUILDS/crt0-pour-executif.s.o
__swi_dispatcher_table                            zBUILDS/services.s.o
                                                  zBUILDS/arm-context.s.o
allumer_sorties_s0_s3                             zBUILDS/sorties_s0_s3.c.o
                                                  zBUILDS/application.c.o
attente_caractere_serie1                          zBUILDS/afficheur_lcd.c.o
current_task_count                                zBUILDS/task-descriptor.c.o
envoyer_caractere_serie1                          zBUILDS/afficheur_lcd.c.o
eteindre_sorties_s0_s3                            zBUILDS/sorties_s0_s3.c.o
                                                  zBUILDS/application.c.o
gRunningTaskContextSaveAddress                    zBUILDS/scheduler-many-priorities.c.o
                                                  zBUILDS/arm-context.s.o
initTaskList                                      zBUILDS/task-list.c.o
initialiser_application                           zBUILDS/application.c.o
                                                  zBUILDS/crt0-pour-executif.s.o
initialiser_sorties_s0_s3                         zBUILDS/sorties_s0_s3.c.o
                                                  zBUILDS/application.c.o
initialize_lpc2200_pll                            zBUILDS/initialize-lpc2200-pll.c.o
                                                  zBUILDS/crt0-pour-executif.s.o
insertTaskAtTail                                  zBUILDS/task-list.c.o
insertTaskFollowingPriority                       zBUILDS/task-list.c.o
                                                  zBUILDS/scheduler-many-priorities.c.o
kernel_makeNoTaskRunning                          zBUILDS/scheduler-many-priorities.c.o
                                                  zBUILDS/task-descriptor.c.o
kernel_makeTaskReady                              zBUILDS/scheduler-many-priorities.c.o
                                                  zBUILDS/task-descriptor.c.o
kernel_runningTask                                zBUILDS/scheduler-many-priorities.c.o
                                                  zBUILDS/task-descriptor.c.o
kernel_selectTaskToRun                            zBUILDS/scheduler-many-priorities.c.o
                                                  zBUILDS/arm-context.s.o
lcd_backlight                                     zBUILDS/afficheur_lcd.c.o
lcd_goto_line_column                              zBUILDS/afficheur_lcd.c.o
lcd_init                                          zBUILDS/afficheur_lcd.c.o
lcd_print_char                                    zBUILDS/afficheur_lcd.c.o
lcd_print_hex1                                    zBUILDS/afficheur_lcd.c.o
lcd_print_hex2                                    zBUILDS/afficheur_lcd.c.o
lcd_print_hex4                                    zBUILDS/afficheur_lcd.c.o
lcd_print_hex8                                    zBUILDS/afficheur_lcd.c.o
lcd_print_signed                                  zBUILDS/afficheur_lcd.c.o
lcd_print_signed_with_leading_spaces              zBUILDS/afficheur_lcd.c.o
lcd_print_spaces                                  zBUILDS/afficheur_lcd.c.o
lcd_print_string                                  zBUILDS/afficheur_lcd.c.o
lcd_print_unsigned                                zBUILDS/afficheur_lcd.c.o
lcd_print_unsigned_with_leading_spaces            zBUILDS/afficheur_lcd.c.o
programmer_uart1                                  zBUILDS/afficheur_lcd.c.o
                                                  zBUILDS/application.c.o
recevoir_caractere_serie1                         zBUILDS/afficheur_lcd.c.o
removeFromCurrentTaskList                         zBUILDS/task-list.c.o
removeTaskAtHead                                  zBUILDS/task-list.c.o
                                                  zBUILDS/scheduler-many-priorities.c.o
swi_close_task                                    zBUILDS/task-descriptor.c.o
swi_create_task                                   zBUILDS/task-descriptor.c.o
                                                  zBUILDS/application.c.o
                                                  zBUILDS/services.s.o
swi_preempt                                       zBUILDS/task-descriptor.c.o
                                                  zBUILDS/application.c.o
                                                  zBUILDS/services.s.o
swi_start_task                                    zBUILDS/task-descriptor.c.o
                                                  zBUILDS/application.c.o
swi_task_self_terminate                           zBUILDS/task-descriptor.c.o
                                                  zBUILDS/services.s.o
taskAtHead                                        zBUILDS/task-list.c.o
usr_create_task                                   zBUILDS/services.s.o
usr_preempt                                       zBUILDS/services.s.o
usr_task_self_terminate                           zBUILDS/services.s.o
                                                  zBUILDS/task-descriptor.c.o
