
Allocating common symbols
Common symbol       size              file

gRunningTaskContextSaveAddress
                    0x4               zBUILDS/scheduler-no-priority.c.o

Memory Configuration

Name             Origin             Length             Attributes
internal_ram     0x40000000         0x00004000
external_ram     0x81000000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD zBUILDS/crt0-pour-executif.s.o
LOAD zBUILDS/handler-stub-for-DAbort.s.o
LOAD zBUILDS/handler-stub-for-FIRQ.s.o
LOAD zBUILDS/handler-stub-for-PAbort.s.o
LOAD zBUILDS/handler-stub-for-undef.s.o
LOAD zBUILDS/initialize-lpc2200-pll.c.o
LOAD zBUILDS/sorties_s0_s3.c.o
LOAD zBUILDS/afficheur_lcd.c.o
LOAD zBUILDS/arm-context.s.o
LOAD zBUILDS/task-descriptor.c.o
LOAD zBUILDS/scheduler-no-priority.c.o
LOAD zBUILDS/task-list.c.o
LOAD zBUILDS/services.s.o
LOAD zBUILDS/application.c.o
LOAD /usr/local/dev-arm/i386-Darwin-arm-gcc-4.6.1/arm-elf/lib/libc.a
LOAD /usr/local/dev-arm/i386-Darwin-arm-gcc-4.6.1/lib/gcc/arm-elf/4.6.1/libgcc.a
                0x00000100                FIQ_STACK_SIZE = 0x100
                0x00000100                IRQ_STACK_SIZE = 0x100
                0x00000100                ABT_STACK_SIZE = 0x100
                0x00000100                UND_STACK_SIZE = 0x100
                0x00000100                USR_STACK_SIZE = 0x100
                0x00000400                SVC_STACK_SIZE = 0x400

.vectors        0x40000000       0x40
 *(.vectors)
 .vectors       0x40000000       0x40 zBUILDS/crt0-pour-executif.s.o

.text           0x81000000      0xd48
 *(.init)
 .init          0x81000000       0xb4 zBUILDS/crt0-pour-executif.s.o
                0x81000000                ResetHandler
                0x810000b4                . = ALIGN (0x4)
 *(.text)
 .text          0x810000b4        0x0 zBUILDS/crt0-pour-executif.s.o
 .text          0x810000b4        0x4 zBUILDS/handler-stub-for-DAbort.s.o
                0x810000b4                DAbortHandler
 .text          0x810000b8        0x4 zBUILDS/handler-stub-for-FIRQ.s.o
                0x810000b8                FIQHandler
 .text          0x810000bc        0x4 zBUILDS/handler-stub-for-PAbort.s.o
                0x810000bc                PAbortHandler
 .text          0x810000c0        0x4 zBUILDS/handler-stub-for-undef.s.o
                0x810000c0                UndefHandler
 .text          0x810000c4       0x78 zBUILDS/initialize-lpc2200-pll.c.o
                0x810000c4                initialize_lpc2200_pll
 .text          0x8100013c       0x80 zBUILDS/sorties_s0_s3.c.o
                0x8100013c                initialiser_sorties_s0_s3
                0x8100015c                allumer_sorties_s0_s3
                0x8100018c                eteindre_sorties_s0_s3
 .text          0x810001bc      0x42c zBUILDS/afficheur_lcd.c.o
                0x810001bc                lcd_goto_line_column
                0x81000200                lcd_backlight
                0x81000228                lcd_print_char
                0x8100024c                lcd_print_string
                0x81000280                lcd_init
                0x810002c0                lcd_print_hex1
                0x81000310                lcd_print_unsigned
                0x8100038c                lcd_print_unsigned_with_leading_spaces
                0x810003f8                lcd_print_signed
                0x81000428                lcd_print_signed_with_leading_spaces
                0x810004a0                lcd_print_hex2
                0x810004bc                lcd_print_hex4
                0x810004dc                lcd_print_hex8
                0x810004fc                lcd_print_spaces
                0x8100052c                programmer_uart1
                0x81000584                recevoir_caractere_serie1
                0x810005a4                attente_caractere_serie1
                0x810005c4                envoyer_caractere_serie1
 .text          0x810005e8      0x16c zBUILDS/arm-context.s.o
                0x810005e8                SWIHandler
                0x81000688                IRQHandler
                0x8100071c                __entry_point
 .text          0x81000754      0x174 zBUILDS/task-descriptor.c.o
                0x81000774                swi_create_task
                0x810007e0                swi_task_self_terminate
                0x810007f8                swi_start_task
                0x8100084c                swi_close_task
                0x8100089c                current_task_count
                0x810008ac                swi_preempt
 .text          0x810008c8       0x8c zBUILDS/scheduler-no-priority.c.o
                0x810008c8                kernel_runningTask
                0x810008d8                kernel_makeTaskReady
                0x810008f4                kernel_makeNoTaskRunning
                0x81000914                kernel_selectTaskToRun
 .text          0x81000954      0x178 zBUILDS/task-list.c.o
                0x81000954                initTaskList
                0x81000964                insertTaskAtTail
                0x8100099c                insertTaskFollowingPriority
                0x81000a30                taskAtHead
                0x81000a38                removeTaskAtHead
                0x81000a80                removeFromCurrentTaskList
 .text          0x81000acc       0x24 zBUILDS/services.s.o
                0x81000acc                __swi_dispatcher_table
                0x81000ad8                usr_create_task
                0x81000ae0                usr_task_self_terminate
                0x81000ae8                usr_preempt
 .text          0x81000af0      0x164 zBUILDS/application.c.o
                0x81000b74                initialiser_application
                0x81000c54                . = ALIGN (0x4)
 *(.rodata)
                0x81000c54                . = ALIGN (0x4)
 *(.rodata*)
                0x81000c54                . = ALIGN (0x4)
 *(.glue_7t)
 .glue_7t       0x00000000        0x0 linker stubs
                0x81000c54                . = ALIGN (0x4)
 *(.glue_7)
 .glue_7        0x00000000        0x0 linker stubs
                0x81000c54                . = ALIGN (0x4)
 *(.comment)
 .comment       0x81000c54       0x11 zBUILDS/initialize-lpc2200-pll.c.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 zBUILDS/sorties_s0_s3.c.o
 .comment       0x00000000       0x12 zBUILDS/afficheur_lcd.c.o
 .comment       0x00000000       0x12 zBUILDS/task-descriptor.c.o
 .comment       0x00000000       0x12 zBUILDS/scheduler-no-priority.c.o
 .comment       0x00000000       0x12 zBUILDS/task-list.c.o
 .comment       0x00000000       0x12 zBUILDS/application.c.o
                0x81000c68                . = ALIGN (0x4)
 *fill*         0x81000c65        0x3 00
 *(.ARM.*)
 .ARM.attributes
                0x81000c68       0x10 zBUILDS/crt0-pour-executif.s.o
 .ARM.attributes
                0x81000c78       0x10 zBUILDS/handler-stub-for-DAbort.s.o
 .ARM.attributes
                0x81000c88       0x10 zBUILDS/handler-stub-for-FIRQ.s.o
 .ARM.attributes
                0x81000c98       0x10 zBUILDS/handler-stub-for-PAbort.s.o
 .ARM.attributes
                0x81000ca8       0x10 zBUILDS/handler-stub-for-undef.s.o
 .ARM.attributes
                0x81000cb8       0x10 zBUILDS/initialize-lpc2200-pll.c.o
 .ARM.attributes
                0x81000cc8       0x10 zBUILDS/sorties_s0_s3.c.o
 .ARM.attributes
                0x81000cd8       0x10 zBUILDS/afficheur_lcd.c.o
 .ARM.attributes
                0x81000ce8       0x10 zBUILDS/arm-context.s.o
 .ARM.attributes
                0x81000cf8       0x10 zBUILDS/task-descriptor.c.o
 .ARM.attributes
                0x81000d08       0x10 zBUILDS/scheduler-no-priority.c.o
 .ARM.attributes
                0x81000d18       0x10 zBUILDS/task-list.c.o
 .ARM.attributes
                0x81000d28       0x10 zBUILDS/services.s.o
 .ARM.attributes
                0x81000d38       0x10 zBUILDS/application.c.o
                0x81000d48                . = ALIGN (0x4)
                0x81000d48                etext = .

.vfp11_veneer   0x81000d48        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x81000d48        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.data           0x81000d48        0x0
                0x81000d48                PROVIDE (__data_start, .)
 *(.data)
 .data          0x81000d48        0x0 zBUILDS/crt0-pour-executif.s.o
 .data          0x81000d48        0x0 zBUILDS/handler-stub-for-DAbort.s.o
 .data          0x81000d48        0x0 zBUILDS/handler-stub-for-FIRQ.s.o
 .data          0x81000d48        0x0 zBUILDS/handler-stub-for-PAbort.s.o
 .data          0x81000d48        0x0 zBUILDS/handler-stub-for-undef.s.o
 .data          0x81000d48        0x0 zBUILDS/initialize-lpc2200-pll.c.o
 .data          0x81000d48        0x0 zBUILDS/sorties_s0_s3.c.o
 .data          0x81000d48        0x0 zBUILDS/afficheur_lcd.c.o
 .data          0x81000d48        0x0 zBUILDS/arm-context.s.o
 .data          0x81000d48        0x0 zBUILDS/task-descriptor.c.o
 .data          0x81000d48        0x0 zBUILDS/scheduler-no-priority.c.o
 .data          0x81000d48        0x0 zBUILDS/task-list.c.o
 .data          0x81000d48        0x0 zBUILDS/services.s.o
 .data          0x81000d48        0x0 zBUILDS/application.c.o
                0x81000d48                . = ALIGN (0x4)
                0x81000d48                edata = .
                0x81000d48                _edata = .
                0x81000d48                PROVIDE (__data_end, .)

.bss            0x81000d48      0xcb8
                0x81000d48                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x81000d48        0x0 zBUILDS/crt0-pour-executif.s.o
 .bss           0x81000d48        0x0 zBUILDS/handler-stub-for-DAbort.s.o
 .bss           0x81000d48        0x0 zBUILDS/handler-stub-for-FIRQ.s.o
 .bss           0x81000d48        0x0 zBUILDS/handler-stub-for-PAbort.s.o
 .bss           0x81000d48        0x0 zBUILDS/handler-stub-for-undef.s.o
 .bss           0x81000d48        0x0 zBUILDS/initialize-lpc2200-pll.c.o
 .bss           0x81000d48        0x0 zBUILDS/sorties_s0_s3.c.o
 .bss           0x81000d48        0x0 zBUILDS/afficheur_lcd.c.o
 .bss           0x81000d48        0x0 zBUILDS/arm-context.s.o
 .bss           0x81000d48        0xc zBUILDS/task-descriptor.c.o
 .bss           0x81000d54        0xc zBUILDS/scheduler-no-priority.c.o
 .bss           0x81000d60        0x0 zBUILDS/task-list.c.o
 .bss           0x81000d60        0x0 zBUILDS/services.s.o
 .bss           0x81000d60      0x2e0 zBUILDS/application.c.o
 *(COMMON)
 COMMON         0x81001040        0x4 zBUILDS/scheduler-no-priority.c.o
                0x81001040                gRunningTaskContextSaveAddress
                0x81001044                . = ALIGN (0x4)
                0x81001044                PROVIDE (__bss_end, .)
                0x81001100                . = ALIGN (0x100)
 *fill*         0x81001044       0xbc 00
                0x81001100                PROVIDE (__stack_start, .)
                0x81001100                PROVIDE (__stack_fiq_start, .)
                0x81001200                . = (. + FIQ_STACK_SIZE)
 *fill*         0x81001100      0x100 00
                0x81001200                . = ALIGN (0x4)
                0x81001200                PROVIDE (__stack_fiq_end, .)
                0x81001200                PROVIDE (__stack_irq_start, .)
                0x81001300                . = (. + IRQ_STACK_SIZE)
 *fill*         0x81001200      0x100 00
                0x81001300                . = ALIGN (0x4)
                0x81001300                PROVIDE (__stack_irq_end, .)
                0x81001300                PROVIDE (__stack_abt_start, .)
                0x81001400                . = (. + ABT_STACK_SIZE)
 *fill*         0x81001300      0x100 00
                0x81001400                . = ALIGN (0x4)
                0x81001400                PROVIDE (__stack_abt_end, .)
                0x81001400                PROVIDE (__stack_und_start, .)
                0x81001500                . = (. + UND_STACK_SIZE)
 *fill*         0x81001400      0x100 00
                0x81001500                . = ALIGN (0x4)
                0x81001500                PROVIDE (__stack_und_end, .)
                0x81001500                PROVIDE (__stack_svc_start, .)
                0x81001900                . = (. + SVC_STACK_SIZE)
 *fill*         0x81001500      0x400 00
                0x81001900                . = ALIGN (0x4)
                0x81001900                PROVIDE (__stack_svc_end, .)
                0x81001900                PROVIDE (__stack_usr_start, .)
                0x81001a00                . = (. + USR_STACK_SIZE)
 *fill*         0x81001900      0x100 00
                0x81001a00                . = ALIGN (0x4)
                0x81001a00                PROVIDE (__stack_usr_end, .)
                0x81001a00                PROVIDE (__stack_end, .)
                0x81001a00                PROVIDE (__heap_start, .)
OUTPUT(zPRODUCTS/test-external-ram.elf elf32-littlearm)

Cross Reference Table

Symbol                                            File
DAbortHandler                                     zBUILDS/handler-stub-for-DAbort.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
FIQHandler                                        zBUILDS/handler-stub-for-FIRQ.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
IRQHandler                                        zBUILDS/arm-context.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
PAbortHandler                                     zBUILDS/handler-stub-for-PAbort.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
ResetHandler                                      zBUILDS/crt0-pour-executif.s.o
SWIHandler                                        zBUILDS/arm-context.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
UndefHandler                                      zBUILDS/handler-stub-for-undef.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
__bss_end                                         zBUILDS/crt0-pour-executif.s.o
__bss_start                                       zBUILDS/crt0-pour-executif.s.o
__entry_point                                     zBUILDS/arm-context.s.o
                                                  zBUILDS/crt0-pour-executif.s.o
__stack_abt_end                                   zBUILDS/crt0-pour-executif.s.o
__stack_fiq_end                                   zBUILDS/crt0-pour-executif.s.o
__stack_irq_end                                   zBUILDS/crt0-pour-executif.s.o
__stack_svc_end                                   zBUILDS/crt0-pour-executif.s.o
__stack_und_end                                   zBUILDS/crt0-pour-executif.s.o
__swi_dispatcher_table                            zBUILDS/services.s.o
                                                  zBUILDS/arm-context.s.o
allumer_sorties_s0_s3                             zBUILDS/sorties_s0_s3.c.o
                                                  zBUILDS/application.c.o
attente_caractere_serie1                          zBUILDS/afficheur_lcd.c.o
current_task_count                                zBUILDS/task-descriptor.c.o
envoyer_caractere_serie1                          zBUILDS/afficheur_lcd.c.o
eteindre_sorties_s0_s3                            zBUILDS/sorties_s0_s3.c.o
                                                  zBUILDS/application.c.o
gRunningTaskContextSaveAddress                    zBUILDS/scheduler-no-priority.c.o
                                                  zBUILDS/arm-context.s.o
initTaskList                                      zBUILDS/task-list.c.o
initialiser_application                           zBUILDS/application.c.o
                                                  zBUILDS/crt0-pour-executif.s.o
initialiser_sorties_s0_s3                         zBUILDS/sorties_s0_s3.c.o
                                                  zBUILDS/application.c.o
initialize_lpc2200_pll                            zBUILDS/initialize-lpc2200-pll.c.o
                                                  zBUILDS/crt0-pour-executif.s.o
insertTaskAtTail                                  zBUILDS/task-list.c.o
                                                  zBUILDS/scheduler-no-priority.c.o
insertTaskFollowingPriority                       zBUILDS/task-list.c.o
kernel_makeNoTaskRunning                          zBUILDS/scheduler-no-priority.c.o
                                                  zBUILDS/task-descriptor.c.o
kernel_makeTaskReady                              zBUILDS/scheduler-no-priority.c.o
                                                  zBUILDS/task-descriptor.c.o
kernel_runningTask                                zBUILDS/scheduler-no-priority.c.o
                                                  zBUILDS/task-descriptor.c.o
kernel_selectTaskToRun                            zBUILDS/scheduler-no-priority.c.o
                                                  zBUILDS/arm-context.s.o
lcd_backlight                                     zBUILDS/afficheur_lcd.c.o
lcd_goto_line_column                              zBUILDS/afficheur_lcd.c.o
lcd_init                                          zBUILDS/afficheur_lcd.c.o
lcd_print_char                                    zBUILDS/afficheur_lcd.c.o
lcd_print_hex1                                    zBUILDS/afficheur_lcd.c.o
lcd_print_hex2                                    zBUILDS/afficheur_lcd.c.o
lcd_print_hex4                                    zBUILDS/afficheur_lcd.c.o
lcd_print_hex8                                    zBUILDS/afficheur_lcd.c.o
lcd_print_signed                                  zBUILDS/afficheur_lcd.c.o
lcd_print_signed_with_leading_spaces              zBUILDS/afficheur_lcd.c.o
lcd_print_spaces                                  zBUILDS/afficheur_lcd.c.o
lcd_print_string                                  zBUILDS/afficheur_lcd.c.o
lcd_print_unsigned                                zBUILDS/afficheur_lcd.c.o
lcd_print_unsigned_with_leading_spaces            zBUILDS/afficheur_lcd.c.o
programmer_uart1                                  zBUILDS/afficheur_lcd.c.o
                                                  zBUILDS/application.c.o
recevoir_caractere_serie1                         zBUILDS/afficheur_lcd.c.o
removeFromCurrentTaskList                         zBUILDS/task-list.c.o
removeTaskAtHead                                  zBUILDS/task-list.c.o
                                                  zBUILDS/scheduler-no-priority.c.o
swi_close_task                                    zBUILDS/task-descriptor.c.o
swi_create_task                                   zBUILDS/task-descriptor.c.o
                                                  zBUILDS/application.c.o
                                                  zBUILDS/services.s.o
swi_preempt                                       zBUILDS/task-descriptor.c.o
                                                  zBUILDS/application.c.o
                                                  zBUILDS/services.s.o
swi_start_task                                    zBUILDS/task-descriptor.c.o
                                                  zBUILDS/application.c.o
swi_task_self_terminate                           zBUILDS/task-descriptor.c.o
                                                  zBUILDS/services.s.o
taskAtHead                                        zBUILDS/task-list.c.o
usr_create_task                                   zBUILDS/services.s.o
usr_preempt                                       zBUILDS/services.s.o
usr_task_self_terminate                           zBUILDS/services.s.o
                                                  zBUILDS/task-descriptor.c.o
