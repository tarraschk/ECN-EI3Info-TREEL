
Memory Configuration

Name             Origin             Length             Attributes
internal_ram     0x40000000         0x00004000
external_ram     0x81000000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD zBUILDS/main.c.o
LOAD zBUILDS/crt0-for-sample-code.s.o
LOAD zBUILDS/initialize-lpc2200-pll.c.o
LOAD zBUILDS/handler-for-IRQ.s.o
LOAD zBUILDS/handler-stub-for-DAbort.s.o
LOAD zBUILDS/handler-stub-for-FIRQ.s.o
LOAD zBUILDS/handler-stub-for-PAbort.s.o
LOAD zBUILDS/handler-stub-for-SWI.s.o
LOAD zBUILDS/handler-stub-for-undef.s.o
LOAD /usr/local/dev-arm/i386-Darwin-arm-gcc-4.6.1/arm-elf/lib/libc.a
LOAD /usr/local/dev-arm/i386-Darwin-arm-gcc-4.6.1/lib/gcc/arm-elf/4.6.1/libgcc.a
                0x00000100                FIQ_STACK_SIZE = 0x100
                0x00000100                IRQ_STACK_SIZE = 0x100
                0x00000100                ABT_STACK_SIZE = 0x100
                0x00000100                UND_STACK_SIZE = 0x100
                0x00000100                USR_STACK_SIZE = 0x100
                0x00000400                SVC_STACK_SIZE = 0x400

.vectors        0x40000000       0x40
 *(.vectors)
 .vectors       0x40000000       0x40 zBUILDS/crt0-for-sample-code.s.o

.text           0x81000000      0x220
 *(.init)
 .init          0x81000000       0xc8 zBUILDS/crt0-for-sample-code.s.o
                0x81000000                ResetHandler
                0x810000a0                ExitFunction
                0x810000c8                . = ALIGN (0x4)
 *(.text)
 .text          0x810000c8        0x0 zBUILDS/main.c.o
 .text          0x810000c8        0x0 zBUILDS/crt0-for-sample-code.s.o
 .text          0x810000c8       0x78 zBUILDS/initialize-lpc2200-pll.c.o
                0x810000c8                initialize_lpc2200_pll
 .text          0x81000140       0x28 zBUILDS/handler-for-IRQ.s.o
                0x81000140                IRQHandler
 .text          0x81000168        0x4 zBUILDS/handler-stub-for-DAbort.s.o
                0x81000168                DAbortHandler
 .text          0x8100016c        0x4 zBUILDS/handler-stub-for-FIRQ.s.o
                0x8100016c                FIQHandler
 .text          0x81000170        0x4 zBUILDS/handler-stub-for-PAbort.s.o
                0x81000170                PAbortHandler
 .text          0x81000174        0x4 zBUILDS/handler-stub-for-SWI.s.o
                0x81000174                SWIHandler
 .text          0x81000178        0x4 zBUILDS/handler-stub-for-undef.s.o
                0x81000178                UndefHandler
                0x8100017c                . = ALIGN (0x4)
 *(.rodata)
                0x8100017c                . = ALIGN (0x4)
 *(.rodata*)
                0x8100017c                . = ALIGN (0x4)
 *(.glue_7t)
 .glue_7t       0x00000000        0x0 linker stubs
                0x8100017c                . = ALIGN (0x4)
 *(.glue_7)
 .glue_7        0x00000000        0x0 linker stubs
                0x8100017c                . = ALIGN (0x4)
 *(.comment)
 .comment       0x8100017c       0x11 zBUILDS/main.c.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 zBUILDS/initialize-lpc2200-pll.c.o
                0x81000190                . = ALIGN (0x4)
 *fill*         0x8100018d        0x3 00
 *(.ARM.*)
 .ARM.attributes
                0x81000190       0x10 zBUILDS/main.c.o
 .ARM.attributes
                0x810001a0       0x10 zBUILDS/crt0-for-sample-code.s.o
 .ARM.attributes
                0x810001b0       0x10 zBUILDS/initialize-lpc2200-pll.c.o
 .ARM.attributes
                0x810001c0       0x10 zBUILDS/handler-for-IRQ.s.o
 .ARM.attributes
                0x810001d0       0x10 zBUILDS/handler-stub-for-DAbort.s.o
 .ARM.attributes
                0x810001e0       0x10 zBUILDS/handler-stub-for-FIRQ.s.o
 .ARM.attributes
                0x810001f0       0x10 zBUILDS/handler-stub-for-PAbort.s.o
 .ARM.attributes
                0x81000200       0x10 zBUILDS/handler-stub-for-SWI.s.o
 .ARM.attributes
                0x81000210       0x10 zBUILDS/handler-stub-for-undef.s.o
                0x81000220                . = ALIGN (0x4)
                0x81000220                etext = .

.vfp11_veneer   0x81000220        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x81000220        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.text.startup   0x81000220       0x98
 .text.startup  0x81000220       0x98 zBUILDS/main.c.o
                0x81000220                main

.data           0x810002b8        0x0
                0x810002b8                PROVIDE (__data_start, .)
 *(.data)
 .data          0x810002b8        0x0 zBUILDS/main.c.o
 .data          0x810002b8        0x0 zBUILDS/crt0-for-sample-code.s.o
 .data          0x810002b8        0x0 zBUILDS/initialize-lpc2200-pll.c.o
 .data          0x810002b8        0x0 zBUILDS/handler-for-IRQ.s.o
 .data          0x810002b8        0x0 zBUILDS/handler-stub-for-DAbort.s.o
 .data          0x810002b8        0x0 zBUILDS/handler-stub-for-FIRQ.s.o
 .data          0x810002b8        0x0 zBUILDS/handler-stub-for-PAbort.s.o
 .data          0x810002b8        0x0 zBUILDS/handler-stub-for-SWI.s.o
 .data          0x810002b8        0x0 zBUILDS/handler-stub-for-undef.s.o
                0x810002b8                . = ALIGN (0x4)
                0x810002b8                edata = .
                0x810002b8                _edata = .
                0x810002b8                PROVIDE (__data_end, .)

.bss            0x810002b8      0x948
                0x810002b8                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x810002b8        0x0 zBUILDS/main.c.o
 .bss           0x810002b8        0x0 zBUILDS/crt0-for-sample-code.s.o
 .bss           0x810002b8        0x0 zBUILDS/initialize-lpc2200-pll.c.o
 .bss           0x810002b8        0x0 zBUILDS/handler-for-IRQ.s.o
 .bss           0x810002b8        0x0 zBUILDS/handler-stub-for-DAbort.s.o
 .bss           0x810002b8        0x0 zBUILDS/handler-stub-for-FIRQ.s.o
 .bss           0x810002b8        0x0 zBUILDS/handler-stub-for-PAbort.s.o
 .bss           0x810002b8        0x0 zBUILDS/handler-stub-for-SWI.s.o
 .bss           0x810002b8        0x0 zBUILDS/handler-stub-for-undef.s.o
 *(COMMON)
                0x810002b8                . = ALIGN (0x4)
                0x810002b8                PROVIDE (__bss_end, .)
                0x81000300                . = ALIGN (0x100)
 *fill*         0x810002b8       0x48 00
                0x81000300                PROVIDE (__stack_start, .)
                0x81000300                PROVIDE (__stack_fiq_start, .)
                0x81000400                . = (. + FIQ_STACK_SIZE)
 *fill*         0x81000300      0x100 00
                0x81000400                . = ALIGN (0x4)
                0x81000400                PROVIDE (__stack_fiq_end, .)
                0x81000400                PROVIDE (__stack_irq_start, .)
                0x81000500                . = (. + IRQ_STACK_SIZE)
 *fill*         0x81000400      0x100 00
                0x81000500                . = ALIGN (0x4)
                0x81000500                PROVIDE (__stack_irq_end, .)
                0x81000500                PROVIDE (__stack_abt_start, .)
                0x81000600                . = (. + ABT_STACK_SIZE)
 *fill*         0x81000500      0x100 00
                0x81000600                . = ALIGN (0x4)
                0x81000600                PROVIDE (__stack_abt_end, .)
                0x81000600                PROVIDE (__stack_und_start, .)
                0x81000700                . = (. + UND_STACK_SIZE)
 *fill*         0x81000600      0x100 00
                0x81000700                . = ALIGN (0x4)
                0x81000700                PROVIDE (__stack_und_end, .)
                0x81000700                PROVIDE (__stack_svc_start, .)
                0x81000b00                . = (. + SVC_STACK_SIZE)
 *fill*         0x81000700      0x400 00
                0x81000b00                . = ALIGN (0x4)
                0x81000b00                PROVIDE (__stack_svc_end, .)
                0x81000b00                PROVIDE (__stack_usr_start, .)
                0x81000c00                . = (. + USR_STACK_SIZE)
 *fill*         0x81000b00      0x100 00
                0x81000c00                . = ALIGN (0x4)
                0x81000c00                PROVIDE (__stack_usr_end, .)
                0x81000c00                PROVIDE (__stack_end, .)
                0x81000c00                PROVIDE (__heap_start, .)
OUTPUT(zPRODUCTS/test-external-ram.elf elf32-littlearm)

Cross Reference Table

Symbol                                            File
DAbortHandler                                     zBUILDS/handler-stub-for-DAbort.s.o
                                                  zBUILDS/crt0-for-sample-code.s.o
ExitFunction                                      zBUILDS/crt0-for-sample-code.s.o
FIQHandler                                        zBUILDS/handler-stub-for-FIRQ.s.o
                                                  zBUILDS/crt0-for-sample-code.s.o
IRQHandler                                        zBUILDS/handler-for-IRQ.s.o
                                                  zBUILDS/crt0-for-sample-code.s.o
PAbortHandler                                     zBUILDS/handler-stub-for-PAbort.s.o
                                                  zBUILDS/crt0-for-sample-code.s.o
ResetHandler                                      zBUILDS/crt0-for-sample-code.s.o
SWIHandler                                        zBUILDS/handler-stub-for-SWI.s.o
                                                  zBUILDS/crt0-for-sample-code.s.o
UndefHandler                                      zBUILDS/handler-stub-for-undef.s.o
                                                  zBUILDS/crt0-for-sample-code.s.o
__bss_end                                         zBUILDS/crt0-for-sample-code.s.o
__bss_start                                       zBUILDS/crt0-for-sample-code.s.o
__stack_abt_end                                   zBUILDS/crt0-for-sample-code.s.o
__stack_fiq_end                                   zBUILDS/crt0-for-sample-code.s.o
__stack_irq_end                                   zBUILDS/crt0-for-sample-code.s.o
__stack_svc_end                                   zBUILDS/crt0-for-sample-code.s.o
__stack_und_end                                   zBUILDS/crt0-for-sample-code.s.o
initialize_lpc2200_pll                            zBUILDS/initialize-lpc2200-pll.c.o
                                                  zBUILDS/crt0-for-sample-code.s.o
main                                              zBUILDS/main.c.o
                                                  zBUILDS/crt0-for-sample-code.s.o
